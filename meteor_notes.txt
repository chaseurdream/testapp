
Templates
Template.body.helpers -> Helpers, Events
<template name="somename">

Template.somename.helpers

Installed mqtt broker with all the required dependencies.
mqtt client works by connecting to mqtt://localhost

understand Route Handling for SPA and backend
understand accounts package

we will use websockets for realtime communication

remember meteor doesn't allow for asynchronous style coding: where callbacks and promises exists. Instead it has more of a synchronous but non-blocking style of code achieved through Fiber

Why use Mongo always in Meteor? Even redis can be useful when it comes to caching data? check caching performance Mongo vs Redis

What is optimistic UI (a.k.a latency compensation)? Has to do with methods


https://www.discovermeteor.com/blog/what-goes-where/ - Nice post to get started superficially
http://www.primaryobjects.com/2015/07/06/a-meteor-js-review-and-tutorial-for-single-page-web-application-development/
https://meteorhacks.com/meteor-ui-pattern-keeping-app-state-in-the-url/ - UI Patterns

How to use Templates and Views when it comes to views

What does reactive-var do?

How to maintain states and page navigation?

Interesting packages 
meteor_up: Chef like package useful for setting up our own servers
velocity: testing package

Deployment:
1. Heroku - 
2. Modulus - app deployment platform for node applications - convert meteor apps to node like apps using  Demeteorizer 
3. RockerDocker - Something around docker

Pointers for meteor - 
	State of Deployment
	testing
	error handling
	async needs better queueing 



Very nice video - https://www.youtube.com/watch?v=tqLbodVH3dw - CS 294-101 - 02 Matt Debergalis: The design and implementation of the Meteor platform - https://gist.github.com/debergalis/bf76084cdb1434d8733d/
MEteor implements DDP and makes use of EJSON (extended JSON- mostly used to simiplify serialization of Date like data types)
DDP - distributed data protocol -- mostly like CORBA and similar 90's type communication protocol and not like HTTP.

Meteor makes use of poll and diff method in order to check for changes in database.

Mongodb writes to Oplog every time it makes a write operation.  - Oplog tailing

http://inst.eecs.berkeley.edu/~cs294-101/sp15/ - good link of course material for web tech
http://webtech-cs294.tumblr.com/


make note of following packages:
- autoform or collection2 or collection-helpers
